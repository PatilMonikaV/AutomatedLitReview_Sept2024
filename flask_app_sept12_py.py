# -*- coding: utf-8 -*-
"""flask_app_Sept12.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y8qeY4ThG9cDPENY3j1C6nT-RC1nYAC4
"""

# deploy this model on flask

# !pip install flask

from flask import Flask, request, jsonify
import pickle
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer

app = Flask(__name__)

# Load the trained model and TF-IDF vectorizer
filename = '/content/svm_model.sav'
svm_model = pickle.load(open(filename, 'rb'))

# Load the TF-IDF vectorizer (assuming you saved it as 'tfidf_vectorizer.sav')
tfidf_vectorizer_filename = 'tfidf_vectorizer.pkl'
tfidf_vectorizer = pickle.load(open(tfidf_vectorizer_filename, 'rb'))

@app.route('/predict', methods=['POST'])
def predict():
    try:
        data = request.get_json(force=True)
        abstract = data['abstract']

        # Transform the input abstract using the loaded TF-IDF vectorizer
        tfidf_input = tfidf_vectorizer.transform([abstract])

        # Make prediction using the loaded model
        prediction = svm_model.predict(tfidf_input)

        # Return the prediction as a JSON response
        return jsonify({'prediction': prediction.tolist()})
    except Exception as e:
        return jsonify({'error': str(e)})

if __name__ == '__main__':
    app.run(debug=True)

